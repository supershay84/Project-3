{"version":3,"sources":["Components/Forms/BusinessForm.js","Components/Forms/RegisterForm.js","Components/Forms/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["BusinessForm","props","nameInput","useRef","descriptionInput","urlInput","imageInput","createBusiness","e","a","preventDefault","name","current","value","description","url","image","body","JSON","stringify","currentTarget","reset","console","log","fetch","method","headers","response","json","data","updateBusinesses","businesses","error","onSubmit","type","ref","placeholder","className","RegisterForm","regNameInput","regPasswordInput","register","username","password","LoginForm","passwordInput","useState","setToken","login","window","localStorage","setItem","token","App","setBusinesses","fetchBusinesses","deleteBusiness","id","filteredBusinesses","filter","business","_id","useEffect","getItem","map","src","href","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef29e2a8.chunk.js","sourcesContent":["import {useRef, useState, useEffect} from 'react';\n\nconst BusinessForm = (props) => {\n    const nameInput = useRef(null);\n    const descriptionInput = useRef(null);\n    const urlInput = useRef(null);\n    const imageInput = useRef(null);\n\n    const createBusiness = async (e) => {\n        e.preventDefault()\n        const name = nameInput.current.value;\n        const description = descriptionInput.current.value;\n        const url = urlInput.current.value;\n        const image = imageInput.current.value;\n        const body = JSON.stringify({name, description, url, image});\n        e.currentTarget.reset();\n        console.log(body)\n        try {\n            const response = await fetch('http://localhost:3000/businesses', {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: body\n            })\n            const data = await response.json();\n            props.updateBusinesses([...props.businesses, data])\n        } catch(err) {\n            console.error(err)\n        }\n\n    }\n\n    return (\n        <form onSubmit={createBusiness}>\n            <input type=\"text\" ref={nameInput} placeholder=\"Business Name\"/>\n            <input type=\"text\" ref={descriptionInput} placeholder=\"Business Description\"/>\n            <input type=\"text\" ref={urlInput} placeholder=\"Business URL\"/>\n            <input type=\"text\" ref={imageInput} placeholder=\"Add Image\"/>\n            <input className=\"submit\" type=\"submit\" value=\"Add Your Business\"/>\n        </form>\n    )\n}\n\nexport default BusinessForm;","import {useRef, useState, useEffect} from 'react';\n\nconst RegisterForm = (props) => {\n    const regNameInput = useRef(null);\n    const regPasswordInput = useRef(null);\n\n const register = async (e) => {\n    e.preventDefault()\n    const body = JSON.stringify({\n      username: regNameInput.current.value,\n      password: regPasswordInput.current.value\n    })\n    try {\n      const response = await fetch('http://localhost:3000/fregister', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body\n      })\n      const data = await response.json();\n    } catch (err){\n      console.error(err)\n    }\n  }\n\n  return(\n    <form className=\"registerForm\" onSubmit= {register}>\n    <input className=\"registerName\" type =\"text\" placeholder=\"Create Username\" ref={regNameInput} ></input>\n    <input className=\"registerPassword\" type=\"password\" placeholder=\"Create Password\" ref={regPasswordInput}></input>\n    <input className=\"registerSubmit\"  type=\"submit\" value=\"Register\"></input></form>\n  )\n}\n\nexport default RegisterForm;"," import {useRef, useState, useEffect} from 'react';\n\n const LoginForm = (props) => {\n    const nameInput = useRef(null);\n    const passwordInput = useRef(null);\n    const [token, setToken] = useState('');\n\n const login = async (e) => {\n    e.preventDefault()\n    const body = JSON.stringify({\n      username: nameInput.current.value,\n      password: passwordInput.current.value\n    })\n    try {\n      const response = await fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body\n      })\n      const data = await response.json();\n      window.localStorage.setItem('token', `Bearer ${data.token}`);\n      setToken(`Bearer ${data.token}`)\n    } catch(err) {\n      console.error(err)\n    }\n  }\n\n  return(\n    <form className=\"loginForm\" onSubmit={login} >\n    <input className=\"loginPassword\" type =\"text\" placeholder=\"Username\" ref={nameInput} ></input>\n    <input className=\"loginPassword\"  type=\"password\" placeholder=\"Password\" ref={passwordInput} ></input>\n      <input className=\"loginSubmit\"  type=\"submit\" value=\"Login\" ></input>\n    </form>\n  )\n}\n\nexport default LoginForm;","import {useState, useEffect, useRef} from 'react';\nimport './App.css';\nimport BusinessForm from './Components/Forms/BusinessForm';//CREATE//\nimport EditForm from './Components/Forms/EditForm';//EDIT\nimport RegisterForm from './Components/Forms/RegisterForm';\nimport LoginForm from './Components/Forms/LoginForm';\n\nfunction App() {\n  const [businesses, setBusinesses] = useState([]);\n  const [token, setToken] = useState('');\n \n  //READ//\n  const fetchBusinesses = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/businesses');\n      const data = await response.json();\n      setBusinesses(data)\n    } catch(err) {\n      console.error(err)\n    }\n  }\n\n  //UPDATE//\n  const updateBusiness = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:3000/businesses/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json',\n          \"Authorization\": token\n        }\n      })\n      const data = await response.json();\n      const filteredBusinesses = businesses.filter(business => business._id !== data._id)\n      setBusinesses(filteredBusinesses);\n    } catch(err) {\n      console.error(err)\n    }\n  }\n\n  //DELETE//\n    const deleteBusiness = async (id) => {\n      try {\n        const response = await fetch(`http://localhost:3000/businesses/${id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-type': 'application/json',\n            \"Authorization\": token\n          }\n        })\n        const data = await response.json();\n        const filteredBusinesses = businesses.filter(business => business._id !== data._id)\n        setBusinesses(filteredBusinesses);\n      } catch(error) {\n        console.error(error)\n      }\n    }\n\n  useEffect(() => {\n    fetchBusinesses()\n    if(window.localStorage.getItem('token')){\n      setToken(window.localStorage.getItem('token'))\n    }\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <nav>\n      <RegisterForm/>\n      <LoginForm/>\n      </nav>\n\n      <h1>All in your business!</h1>\n      <p>Find your new favorite small businesses!</p>\n\n      <BusinessForm updateBusinesses={setBusinesses} businesses={businesses} />\n      <ul>\n      {\n           businesses.map(business => {\n             return (\n              <li className=\"businessName\" key ={business._id}>{business.name}<br/>\n              <li className=\"businessDescription\">{business.description}</li><br/>\n              <img \n               src ={business.image} \n               className=\"businessImage\"/>\n               <br/>\n\n               <a className=\"url\" href={business.url}>Check me out!</a><br/>\n\n              <button onClick= {\n                 (e) => {\n                  deleteBusiness(business._id)\n                 }\n               }> DELETE {business.name}</button>   \n               \n               {/* <EditForm updateBusinesses={setBusinesses} businesses= {businesses}/>      */}\n               </li>\n             )\n           })\n\n        }\n      </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}